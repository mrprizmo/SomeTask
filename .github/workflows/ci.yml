name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-test:
    name: Lint and Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/app_test

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show tool versions
        run: |
          python --version
          pip --version
          black --version
          ruff --version
          mypy --version
          pytest --version

      - name: Black (check)
        run: black --check .

      - name: Ruff (lint)
        run: ruff check .

      - name: MyPy (type check)
        run: mypy .

      - name: Pytest with coverage
        run: |
          pytest \
            --cov=app \  # замените "app" на ваш пакет при необходимости
            --cov-report=term-missing:skip-covered \
            --cov-report=xml \
            -ra

      - name: Upload coverage.xml artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
